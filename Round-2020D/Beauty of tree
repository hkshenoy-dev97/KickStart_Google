#include<bits/stdc++.h>
#include <iterator>
#include <iostream>
#include <numeric>
#include <math.h>
#define ll long long
#define ull long
#define mpa make_pair
#define pb push_back
#define ff first
#define pii pair<ll,ll>
#define dd double
#define trace(x) cerr << #x << " : " << x << endl
#define ss second
#define boost ios_base::sync_with_stdio(0)
#define forp(i,a,b) for(ll i=a;i<=b;i++)
#define rep(i,n)    for(ll i=0;i<n;++i)
#define ren(i,n)    for(ll i=n-1;i>=0;i--)
#define forn(i,a,b) for(ll i=a;i>=b;i--)
#define all(c) (c).begin(),(c).end()
#define tr(c,i) for(typeof((c).begin()) i = (c).begin(); i != (c).end();
#define sc(x) scanf("%lld",&x)
#define clr(x,val) memset(x,val,sizeof(x))
#define pr(x) printf("%lld\n",x) 
#define gc getchar
#define pdd pair<dd,dd>
#define prec(x) cout<<fixed<<setprecision(x)
#define fre freopen("input.txt","r",stdin),freopen("output.txt","w",stdout)
#define arr array 
using namespace std;
map<ll,ll> help_a,help_b;
dd ans=0.0;
ll n,a,b;  
vector<ll> adj[500005];

void dfs(ll v,ll p,ll d){

    ll la=help_a[d%a];
    ll lb=help_b[d%b];

    help_a[d%a]++;
    help_b[d%b]++;

    for(auto to:adj[v]){
        if(to==p)continue;
        dfs(to,v,d+1);
    }

    dd na=n-(help_a[d%a]-la);
    dd nb=n-(help_b[d%b]-lb);
    
    
    ans=ans+1.00-(1.00*na*nb)/(1.00 *n *n);
}

void solve(ll tc){   
    ll p;
    cin>>n>>a>>b;
    
    for(ll i=1;i<=n;i++){
        adj[i].clear(); 
    }

    for(ll i=1;i<n;i++){
        cin>>p;
        adj[p].pb(i+1);
        adj[i+1].pb(p);
    }

    help_a.clear();
    help_b.clear();
    ans=0.0;

    dfs(1,-1,0);

    cout<<"Case #"<<tc<<": "<<ans<<endl;
    

}

int main(){
    prec(20);
	boost;
	ll t=1;
    ll tc=1;
	cin>>t;

	while(t--){
		solve(tc);
        tc++;
	}
    
     
}
  
