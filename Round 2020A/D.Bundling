#include<bits/stdc++.h>
#include <iterator>
#include <iostream>
#include <numeric>
#include <math.h>
#define ll long long
#define ull long
#define mpa make_pair
#define pb push_back
#define ff first
#define pii pair<ll,ll>
#define dd double
#define trace(x) cerr << #x << " : " << x << endl
#define ss second
#define boost ios_base::sync_with_stdio(0)
#define forp(i,a,b) for(ll i=a;i<=b;i++)
#define rep(i,n)    for(ll i=0;i<n;++i)
#define ren(i,n)    for(ll i=n-1;i>=0;i--)
#define forn(i,a,b) for(ll i=a;i>=b;i--)
#define all(c) (c).begin(),(c).end()
#define tr(c,i) for(typeof((c).begin()) i = (c).begin(); i != (c).end();
#define sc(x) scanf("%lld",&x)
#define clr(x,val) memset(x,val,sizeof(x))
#define pr(x) printf("%lld\n",x) 
#define pdd pair<dd,dd>
#define read_arr(a,n) for(ll i=1;i<=n;i++)cin>>a[i];
#define init_arr(a,n) for(ll i=1;i<=n;i++)a[i]=n-i+1;
#define prec(x) cout<<fixed<<setprecision(x)
#define fre freopen("input.txt","r",stdin),freopen("output.txt","w",stdout)
#define arr array 
using namespace std;

ll n,k,ans=0;
struct node{
	
	node * nx[26];
	ll cnt=0;
	
	node (){
		cnt=0;
		for(ll i=0;i<26;i++)nx[i]=NULL;
	}
};

void insert(node *head,string s){
	ll n=s.size();
	for(ll i=0;i<n;i++){
		ll ch=s[i]-'A';
		if(head->nx[ch]==NULL){
			head->nx[ch]=new node();
		}

		head=head->nx[ch];
		head->cnt++;
	}
}

void traverse(node *head){
	ans=ans+(head->cnt)/k;
	for(ll i=0;i<26;i++){
		
		
		if(head->nx[i]){
			traverse(head->nx[i]);
		}
	}
}

int main(){
	ll t;
	cin>>t;
	ll tc=1;

	while(t--){
		node *trie=new node();
		node *head=trie;

		string s;
		
		cin>>n>>k;

		for(ll i=0;i<n;i++){
			cin>>s;
			insert(head,s);
		}

		ans=0;
		traverse(head);

		cout<<"Case #"<<tc<<": "<<ans<<endl;
		tc++;



	



		
	}
	



	

	
}
	
	
 
 
 
 


	

	







	
	

	
	




		


    
	


		
