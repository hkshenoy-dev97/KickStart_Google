#include<bits/stdc++.h>
#include <iterator>
#include <iostream>
#include <numeric>
#include <math.h>
#define ll long long
#define ull long
#define mpa make_pair
#define pb push_back
#define ff first
#define pii pair<ll,ll>
#define dd double
#define trace(x) cerr << #x << " : " << x << endl
#define ss second
#define boost ios_base::sync_with_stdio(0)
#define forp(i,a,b) for(ll i=a;i<=b;i++)
#define rep(i,n)    for(ll i=0;i<n;++i)
#define ren(i,n)    for(ll i=n-1;i>=0;i--)
#define forn(i,a,b) for(ll i=a;i>=b;i--)
#define all(c) (c).begin(),(c).end()
#define tr(c,i) for(typeof((c).begin()) i = (c).begin(); i != (c).end();
#define sc(x) scanf("%lld",&x)
#define clr(x,val) memset(x,val,sizeof(x))
#define pr(x) printf("%lld\n",x) 
#define pdd pair<dd,dd>
#define read_arr(a,n) for(ll i=1;i<=n;i++)cin>>a[i];
#define init_arr(a,n) for(ll i=1;i<=n;i++)a[i]=n-i+1;
#define prec(x) cout<<fixed<<setprecision(x)
#define fre freopen("input.txt","r",stdin),freopen("output.txt","w",stdout)
#define arr array 
using namespace std;
ll grid[305][305];
ll dx[4]={-1,1,0,0};
ll dy[4]={0,0,-1,1};
ll r,c;
void bfs(ll i,ll j){

	queue<pii> q;
	q.push({i,j});

	while(q.size()){
		ll x=q.front().ff;
		ll y=q.front().ss;
		q.pop();

		for(ll i=0;i<4;i++){
			ll nx=x+dx[i];
			ll ny=y+dy[i];

			if(nx>=1 and nx<=r and ny>=1 and ny<=c){
				if(grid[nx][ny] < grid[x][y]-1ll){
					grid[nx][ny]=grid[x][y]-1ll;
					q.push({nx,ny});
				
				}
			}
		}
	}


}


void solve(ll tc){
	ll ans=0;
	cin>>r>>c;
	ll or_tot=0;

	for(ll i=1;i<=r;i++){
		for(ll j=1;j<=c;j++){
			cin>>grid[i][j];
			or_tot+=grid[i][j];
		}
	}

	
	for(ll i=1;i<=r;i++){
		for(ll j=1;j<=c;j++){
			bfs(i,j);
		}
	}

	ll tot=0;

	for(ll i=1;i<=r;i++){
		for(ll j=1;j<=c;j++){
		
			tot+=grid[i][j];
		}
	}


	cout<<"Case #"<<tc<<": "<<tot-or_tot<<endl;
	
}
	

int main(){

	boost;
	ll t=1;
	cin>>t;
	ll tc=1;


	while(t--){
		solve(tc);
		tc++;
	}
	

}
	
	
 
 
 
 


	

	







	
	

	
	




		


    
	


		
