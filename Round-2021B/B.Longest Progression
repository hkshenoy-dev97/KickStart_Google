#include<bits/stdc++.h>
#include <iterator>
#include <iostream>
#include <numeric>
#include <math.h>
#define ll long long
#define ull long
#define mpa make_pair
#define pb push_back
#define ff first
#define pii pair<ll,ll>
#define dd double
#define trace(x) cerr << #x << " : " << x << endl
#define ss second
#define boost ios_base::sync_with_stdio(0)
#define forp(i,a,b) for(ll i=a;i<=b;i++)
#define rep(i,n)    for(ll i=0;i<n;++i)
#define ren(i,n)    for(ll i=n-1;i>=0;i--)
#define forn(i,a,b) for(ll i=a;i>=b;i--)
#define all(c) (c).begin(),(c).end()
#define tr(c,i) for(typeof((c).begin()) i = (c).begin(); i != (c).end();
#define sc(x) scanf("%lld",&x)
#define clr(x,val) memset(x,val,sizeof(x))
#define pr(x) printf("%lld\n",x) 
#define pdd pair<dd,dd>
#define read_arr(a,n) for(ll i=1;i<=n;i++)cin>>a[i];
#define init_arr(a,n) for(ll i=1;i<=n;i++)a[i]=n-i+1;
#define prec(x) cout<<fixed<<setprecision(x)
#define fre freopen("input.txt","r",stdin),freopen("output.txt","w",stdout)
#define arr array 
using namespace std;
ll a[300005];
ll pref[300005];
ll suff[300005];
void solve(ll tc){
	ll n;
	cin>>n;
	for(ll i=1;i<=n;i++)cin>>a[i];

	if(n<=3){
		cout<<"Case #"<<tc<<": "<<n<<endl;
		return;
	}

	pref[1]=1;
	pref[2]=2;

	for(ll i=3;i<=n;i++){
		
		if(2*a[i-1]==a[i]+a[i-2]){
			pref[i]=pref[i-1]+1;
		}else{
			pref[i]=2;
		}
	}

	suff[n]=1;
	suff[n-1]=2;

	for(ll i=n-2;i>=1;i--){
		if(2*a[i+1]==a[i]+a[i+2]){
			suff[i]=suff[i+1]+1;
		}else{
			suff[i]=2;
		}
	}
	
	ll ans=2;

	ans=max(ans,suff[2]+1);
	ans=max(ans,pref[n-1]+1);

	for(ll i=2;i<=n-1;i++){
		ans=max(ans,suff[i+1]+1);
		ans=max(ans,pref[i-1]+1);
		
		if(i>=3 and a[i+1]-a[i-1]==2*(a[i-1]-a[i-2])){
			ans=max(ans,pref[i-1]+2);
		}

		if(i+2<=n and 2*(a[i+2]-a[i+1])==a[i+1]-a[i-1]){
			ans=max(ans,suff[i+1]+2);
		}

		if(i-2>=1 and i+2<=n and a[i-1]-a[i-2] == a[i+2]-a[i+1] 
		and 2*(a[i+2]-a[i+1])==a[i+1]-a[i-1]){
			ans=max(ans,pref[i-1]+suff[i+1]+1);
		}
	}

	cout<<"Case #"<<tc<<": "<<ans<<endl;


}

	
	
	

	
int main(){

	boost;
	ll t=1;
	cin>>t;

	ll tc=1;

	while(t--){
		solve(tc);
		tc++;
	}
	

}
	
	
 
 
 
 


	

	







	
	

	
	




		


    
	


		
